samples list of requests and params to communicate with users services

#####################################user model valid#####################################

UserSchemaObject = {
  firstName: {
    required: true,
    type: String,
    maxlength: 50,
  },
  lastName: {
    required: true,
    type: String,
    maxlength: 50,
  },
  email: {
    type: String,
    unique: true,
    required: function () {
      return validator.isEmail(this.email);
    },
    validate: {
      validator: function (email) {
        return validator.isEmail(this.email);
      },
    },
  },
  username: {
    type: String,
    required: true,
    unique: true,
  },
  password: {
    type: String,
    required: true,
    unique: true,
  },
  role: {
    type: String,
    required: true,
    default: Role.SUPER_ADMIN,
    enum: [Role.SUPER_ADMIN, Role.RH, Role.COMPTABLE, Role.MANAGER],
  },
  avatar: {
    type: String,
    default: "/data/uploads/mcf.png",
  },
  restaurant: {
    type: {
      _id: { type: mongoose.Types.ObjectId, required: true },
      infos: {
        type: {
          town: { type: String, required: true },
          address: { type: String, required: true },
          restaurant_name: { type: String, required: true },
        },
      },
    },
  },
  isOnline: {
    type: Boolean,
    default: false,
  },
  _creator: {
    type: Schema.ObjectId,
    ref: "User",
  },

  deletedAt: { type: Date, default: null },
};

#####################################user model valid#####################################

################### user login ###################
url:http://localhost:4001/api/users/login
method:POST
body :{
  "email": "email",
  "password": "password"
}
################### user login ###################



################### user create ###################
url:http://localhost:4001/api/users/create

method:POST

example:
body :{
  "firstName": "sara",
  "lastName": "saga",
  "email": "sara@gmail.com",
  "restaurant": "6433e8a9bd4f93d742bb0ee8",
  "role": "COMPTABLE",
  "password": "morine@gmail.com",
  "_creator": "6433e8a9bd4f93d742bb0ee8"
}
################### user create ###################


################### user delete ###################

url:http://localhost:4001/api/users/delete/643802600bacc7b4b76d9cb5

method:DELETE

example:
body :{
  "_creator": "6433e8a9bd4f93d742bb0ee8"
}
################### user delete ###################


################### user get All users ###################

url:http://localhost:4001/api/users/fetch/all

method:GET

################### user get All users ###################


################### user one user###################

url:http://localhost:4001/api/users/fetch/one/64415580f0954b1dcb44d5fd

method:GET

################### user one user###################


################### user by restaurant ###################

url:http://localhost:4001/api/users/fetch/restaurant/6433e8a9bd4f93d742bb0ea8

method:GET

################### user by restaurant ###################


################### user update ###################

url:http://localhost:4001/api/users/update/64415580f0954b1dcb44d5fd

body:{
  "firstName": "irene",
  "role": "RH",
  "restaurant": {
    "_id": "6433e8a9bd4f93d742bb0ea8",
    "infos": {
      "town": "tanger",
      "address": "tanger rue 200 immeuble 20 appt 1",
      "restaurant_name": "tacos de nice"
    }
  },
  "_creator": "6433e8a9bd4f93d742bb0ee8"
}

method:GET

################### user update ###################
